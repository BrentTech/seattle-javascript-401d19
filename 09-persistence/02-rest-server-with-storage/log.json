{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T02:59:45.146Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T02:59:45.147Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T02:59:45.147Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:59:45.157Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T02:59:45.158Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:00:43.399Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:00:43.400Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:00:43.400Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:00:43.409Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:00:43.409Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:01:48.251Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:01:48.252Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:01:48.252Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:01:48.262Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:01:48.262Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:02:55.250Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:02:55.251Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:02:55.251Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:02:55.262Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:03:17.321Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:03:17.323Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:03:17.323Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:03:17.335Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:05:08.927Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:05:08.928Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:05:08.928Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:05:08.937Z"}
{"level":"error","message":"__SERVER_ERROR__ server is already running","timestamp":"2017-12-07T03:05:08.937Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T03:06:38.444Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T03:06:38.445Z"}
{"level":"info","message":"(request,response) => {\n  // Here, I know that my request has been pre-parsed\n  if(!request.body){\n    sendStatus(response,400,'body not found');\n    return;\n  }\n  if(!request.body.title){\n    sendStatus(response,400,'title not found');\n    return;\n  }\n  if(!request.body.content){\n    sendStatus(response,400,'content not found');\n    return;\n  }\n  // Here, I can create my note since all test pass\n  let note = new Note(request.body.title,request.body.content);\n  notes.push(note);\n  sendJSON(response,200,note);\n}","timestamp":"2017-12-07T03:06:38.445Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:06:38.456Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:06:38.456Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T03:06:38.456Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:13:17.105Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T19:13:17.106Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:13:17.106Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:13:17.173Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:13:17.192Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:13:17.194Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:13:17.194Z"}
{"level":"info","message":"Responding with a 500 code due to Error: ENOENT: no such file or directory, open '/home/vladimirsan/workspace/seattle-javascript-401d19/09-persistence/02-rest-server-with-storage/db.json'","timestamp":"2017-12-07T19:13:17.196Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:19:06.269Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T19:19:06.270Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:19:06.270Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:19:06.335Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:19:06.367Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:19:06.368Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:19:06.368Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:19:06.372Z"}
{"id":"7e443f10-db83-11e7-8dc1-f9bf2a43318e","timestamp":"2017-12-07T19:19:06.372Z","title":"cats","content":"Gregor and The Hound","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:20:18.776Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T19:20:18.777Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:20:18.777Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:20:18.847Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:20:18.868Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:20:18.870Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:20:18.870Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:20:18.874Z"}
{"id":"a97b0560-db83-11e7-beca-e59c4f769769","timestamp":"2017-12-07T19:20:18.874Z","title":"cats","content":"Gregor and The Hound","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:22:17.223Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T19:22:17.225Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:22:17.225Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:22:17.295Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:22:17.314Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:22:17.316Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:22:17.316Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:22:17.322Z"}
{"id":"f0147240-db83-11e7-bb7f-5143fec27713","timestamp":"2017-12-07T19:22:17.322Z","title":"cats","content":"Gregor and The Hound","level":"info","message":""}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T19:22:24.913Z"}
{"level":"info","message":"/api/notes","timestamp":"2017-12-07T19:22:24.913Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:22:24.914Z"}
{"level":"info","message":"Server is online on port 3000","timestamp":"2017-12-07T19:22:24.977Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T19:22:24.998Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T19:22:24.999Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_2qnwrpsbl8.f[2]++;cov_2qnwrpsbl8.s[16]++;\n  // Here, I know that my request has been pre-parsed\n  if (!request.body) {/* istanbul ignore next */cov_2qnwrpsbl8.b[0][0]++;cov_2qnwrpsbl8.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[0][1]++;}cov_2qnwrpsbl8.s[19]++;\n  if (!request.body.title) {/* istanbul ignore next */cov_2qnwrpsbl8.b[1][0]++;cov_2qnwrpsbl8.s[20]++;\n    sendStatus(response, 400, 'title not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[1][1]++;}cov_2qnwrpsbl8.s[22]++;\n  if (!request.body.content) {/* istanbul ignore next */cov_2qnwrpsbl8.b[2][0]++;cov_2qnwrpsbl8.s[23]++;\n    sendStatus(response, 400, 'content not found'); /* istanbul ignore next */cov_2qnwrpsbl8.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_2qnwrpsbl8.b[2][1]++;}\n  // Here, I can create my note since all test pass\n  let note = /* istanbul ignore next */(cov_2qnwrpsbl8.s[25]++, new Note(request.body.title, request.body.content)); /* istanbul ignore next */cov_2qnwrpsbl8.s[26]++;\n  storage.addItem(note).\n  then(() => {/* istanbul ignore next */cov_2qnwrpsbl8.f[3]++;cov_2qnwrpsbl8.s[27]++;\n    sendJSON(response, 200, note);\n  }).\n  catch(error => {/* istanbul ignore next */cov_2qnwrpsbl8.f[4]++;cov_2qnwrpsbl8.s[28]++;\n    sendStatus(response, 500, error);\n  });\n}","timestamp":"2017-12-07T19:22:24.999Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T19:22:25.004Z"}
{"id":"f4a8ee80-db83-11e7-805a-0fa805ee689b","timestamp":"2017-12-07T19:22:25.004Z","title":"cats","content":"Gregor and The Hound","level":"info","message":""}
